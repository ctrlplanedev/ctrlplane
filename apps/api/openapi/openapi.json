{
   "components": {
      "parameters": { },
      "schemas": {
         "AnyApprovalRule": {
            "properties": {
               "minApprovals": {
                  "format": "int32",
                  "type": "integer"
               }
            },
            "required": [
               "minApprovals"
            ],
            "type": "object"
         },
         "ApprovalStatus": {
            "enum": [
               "approved",
               "rejected"
            ],
            "type": "string"
         },
         "BooleanValue": {
            "type": "boolean"
         },
         "CelMatcher": {
            "properties": {
               "cel": {
                  "type": "string"
               }
            },
            "required": [
               "cel"
            ],
            "type": "object"
         },
         "CelSelector": {
            "properties": {
               "cel": {
                  "type": "string"
               }
            },
            "required": [
               "cel"
            ],
            "type": "object"
         },
         "CreateDeploymentRequest": {
            "properties": {
               "description": {
                  "type": "string"
               },
               "jobAgentConfig": {
                  "additionalProperties": true,
                  "type": "object"
               },
               "jobAgentId": {
                  "type": "string"
               },
               "name": {
                  "type": "string"
               },
               "resourceSelector": {
                  "$ref": "#/components/schemas/Selector"
               },
               "slug": {
                  "type": "string"
               },
               "systemId": {
                  "type": "string"
               }
            },
            "required": [
               "systemId",
               "slug",
               "name"
            ],
            "type": "object"
         },
         "CreateDeploymentVersionRequest": {
            "properties": {
               "config": {
                  "additionalProperties": true,
                  "type": "object"
               },
               "createdAt": {
                  "format": "date-time",
                  "type": "string"
               },
               "jobAgentConfig": {
                  "additionalProperties": true,
                  "type": "object"
               },
               "metadata": {
                  "additionalProperties": {
                     "type": "string"
                  },
                  "type": "object"
               },
               "name": {
                  "type": "string"
               },
               "status": {
                  "$ref": "#/components/schemas/DeploymentVersionStatus"
               },
               "tag": {
                  "type": "string"
               }
            },
            "required": [
               "name",
               "tag",
               "status"
            ],
            "type": "object"
         },
         "CreateEnvironmentRequest": {
            "properties": {
               "description": {
                  "type": "string"
               },
               "name": {
                  "type": "string"
               },
               "resourceSelector": {
                  "$ref": "#/components/schemas/Selector"
               },
               "systemId": {
                  "type": "string"
               }
            },
            "required": [
               "systemId",
               "name"
            ],
            "type": "object"
         },
         "CreatePolicyRequest": {
            "properties": {
               "description": {
                  "type": "string"
               },
               "enabled": {
                  "type": "boolean"
               },
               "metadata": {
                  "additionalProperties": {
                     "type": "string"
                  },
                  "description": "Arbitrary metadata for the policy (record<string, string>)",
                  "type": "object"
               },
               "name": {
                  "type": "string"
               },
               "priority": {
                  "type": "integer"
               },
               "rules": {
                  "items": {
                     "$ref": "#/components/schemas/PolicyRule"
                  },
                  "type": "array"
               },
               "selectors": {
                  "items": {
                     "$ref": "#/components/schemas/PolicyTargetSelector"
                  },
                  "type": "array"
               }
            },
            "required": [
               "name"
            ],
            "type": "object"
         },
         "CreateRelationshipRuleRequest": {
            "properties": {
               "description": {
                  "type": "string"
               },
               "fromSelector": {
                  "$ref": "#/components/schemas/Selector"
               },
               "fromType": {
                  "$ref": "#/components/schemas/RelatableEntityType"
               },
               "matcher": {
                  "oneOf": [
                     {
                        "$ref": "#/components/schemas/CelMatcher"
                     }
                  ]
               },
               "metadata": {
                  "additionalProperties": {
                     "type": "string"
                  },
                  "type": "object"
               },
               "name": {
                  "type": "string"
               },
               "reference": {
                  "type": "string"
               },
               "relationshipType": {
                  "type": "string"
               },
               "toSelector": {
                  "$ref": "#/components/schemas/Selector"
               },
               "toType": {
                  "$ref": "#/components/schemas/RelatableEntityType"
               }
            },
            "required": [
               "name",
               "reference",
               "fromType",
               "toType",
               "matcher",
               "relationshipType",
               "metadata"
            ],
            "type": "object"
         },
         "CreateSystemRequest": {
            "properties": {
               "description": {
                  "type": "string"
               },
               "name": {
                  "type": "string"
               }
            },
            "required": [
               "name"
            ],
            "type": "object"
         },
         "CreateWorkspaceRequest": {
            "properties": {
               "name": {
                  "description": "Display name of the workspace",
                  "maxLength": 30,
                  "minLength": 3,
                  "type": "string"
               },
               "slug": {
                  "description": "URL-friendly unique identifier (lowercase, no spaces)",
                  "maxLength": 50,
                  "minLength": 3,
                  "pattern": "^[a-z0-9-]+$",
                  "type": "string"
               }
            },
            "required": [
               "name",
               "slug"
            ],
            "type": "object"
         },
         "Deployment": {
            "properties": {
               "description": {
                  "type": "string"
               },
               "id": {
                  "type": "string"
               },
               "jobAgentConfig": {
                  "additionalProperties": true,
                  "type": "object"
               },
               "jobAgentId": {
                  "type": "string"
               },
               "name": {
                  "type": "string"
               },
               "resourceSelector": {
                  "$ref": "#/components/schemas/Selector"
               },
               "slug": {
                  "type": "string"
               },
               "systemId": {
                  "type": "string"
               }
            },
            "required": [
               "id",
               "name",
               "slug",
               "systemId",
               "jobAgentConfig"
            ],
            "type": "object"
         },
         "DeploymentAndSystem": {
            "properties": {
               "deployment": {
                  "$ref": "#/components/schemas/Deployment"
               },
               "system": {
                  "$ref": "#/components/schemas/System"
               }
            },
            "required": [
               "deployment",
               "system"
            ],
            "type": "object"
         },
         "DeploymentVersion": {
            "properties": {
               "config": {
                  "additionalProperties": true,
                  "type": "object"
               },
               "createdAt": {
                  "format": "date-time",
                  "type": "string"
               },
               "deploymentId": {
                  "type": "string"
               },
               "id": {
                  "type": "string"
               },
               "jobAgentConfig": {
                  "additionalProperties": true,
                  "type": "object"
               },
               "message": {
                  "type": "string"
               },
               "metadata": {
                  "additionalProperties": {
                     "type": "string"
                  },
                  "type": "object"
               },
               "name": {
                  "type": "string"
               },
               "status": {
                  "$ref": "#/components/schemas/DeploymentVersionStatus"
               },
               "tag": {
                  "type": "string"
               }
            },
            "required": [
               "id",
               "name",
               "tag",
               "config",
               "jobAgentConfig",
               "deploymentId",
               "status",
               "createdAt"
            ],
            "type": "object"
         },
         "DeploymentVersionStatus": {
            "enum": [
               "unspecified",
               "building",
               "ready",
               "failed",
               "rejected"
            ],
            "type": "string"
         },
         "Environment": {
            "properties": {
               "createdAt": {
                  "format": "date-time",
                  "type": "string"
               },
               "description": {
                  "type": "string"
               },
               "id": {
                  "type": "string"
               },
               "name": {
                  "type": "string"
               },
               "resourceSelector": {
                  "$ref": "#/components/schemas/Selector"
               },
               "systemId": {
                  "type": "string"
               }
            },
            "required": [
               "id",
               "name",
               "systemId",
               "createdAt"
            ],
            "type": "object"
         },
         "EnvironmentAndSystem": {
            "properties": {
               "environment": {
                  "$ref": "#/components/schemas/Environment"
               },
               "system": {
                  "$ref": "#/components/schemas/System"
               }
            },
            "required": [
               "environment",
               "system"
            ],
            "type": "object"
         },
         "EnvironmentProgressionRule": {
            "properties": {
               "dependsOnEnvironmentSelector": {
                  "$ref": "#/components/schemas/Selector"
               },
               "maximumAgeHours": {
                  "description": "Maximum age of dependency deployment before blocking progression (prevents stale promotions)",
                  "format": "int32",
                  "minimum": 0,
                  "type": "integer"
               },
               "minimumSockTimeMinutes": {
                  "default": 0,
                  "description": "Minimum time to wait after the depends on environment is in a success state before the current environment can be deployed",
                  "format": "int32",
                  "minimum": 0,
                  "type": "integer"
               },
               "minimumSuccessPercentage": {
                  "default": 100,
                  "format": "float",
                  "maximum": 100,
                  "minimum": 0,
                  "type": "number"
               },
               "successStatuses": {
                  "items": {
                     "$ref": "#/components/schemas/JobStatus"
                  },
                  "type": "array"
               }
            },
            "required": [
               "dependsOnEnvironmentSelector"
            ],
            "type": "object"
         },
         "Error": {
            "properties": {
               "code": {
                  "description": "Error code",
                  "type": "string"
               },
               "details": {
                  "description": "Additional error details",
                  "type": "object"
               },
               "message": {
                  "description": "Error message",
                  "type": "string"
               }
            },
            "required": [
               "message"
            ],
            "type": "object"
         },
         "ErrorResponse": {
            "properties": {
               "error": {
                  "example": "Workspace not found",
                  "type": "string"
               }
            },
            "type": "object"
         },
         "GradualRolloutRule": {
            "properties": {
               "id": {
                  "type": "string"
               },
               "policyId": {
                  "type": "string"
               },
               "timeScaleInterval": {
                  "format": "int32",
                  "minimum": 0,
                  "type": "integer"
               }
            },
            "required": [
               "id",
               "policyId",
               "timeScaleInterval"
            ],
            "type": "object"
         },
         "IntegerValue": {
            "type": "integer"
         },
         "Job": {
            "properties": {
               "completedAt": {
                  "format": "date-time",
                  "type": "string"
               },
               "createdAt": {
                  "format": "date-time",
                  "type": "string"
               },
               "externalId": {
                  "type": "string"
               },
               "id": {
                  "type": "string"
               },
               "jobAgentConfig": {
                  "additionalProperties": true,
                  "type": "object"
               },
               "jobAgentId": {
                  "type": "string"
               },
               "metadata": {
                  "additionalProperties": {
                     "type": "string"
                  },
                  "type": "object"
               },
               "releaseId": {
                  "type": "string"
               },
               "startedAt": {
                  "format": "date-time",
                  "type": "string"
               },
               "status": {
                  "$ref": "#/components/schemas/JobStatus"
               },
               "updatedAt": {
                  "format": "date-time",
                  "type": "string"
               }
            },
            "required": [
               "id",
               "releaseId",
               "jobAgentId",
               "jobAgentConfig",
               "status",
               "createdAt",
               "updatedAt",
               "metadata"
            ],
            "type": "object"
         },
         "JobStatus": {
            "enum": [
               "cancelled",
               "skipped",
               "inProgress",
               "actionRequired",
               "pending",
               "failure",
               "invalidJobAgent",
               "invalidIntegration",
               "externalRunNotFound",
               "successful"
            ],
            "type": "string"
         },
         "JobUpdateEvent": {
            "oneOf": [
               {
                  "required": [
                     "id"
                  ]
               },
               {
                  "required": [
                     "agentId",
                     "externalId"
                  ]
               }
            ],
            "properties": {
               "agentId": {
                  "type": "string"
               },
               "externalId": {
                  "type": "string"
               },
               "fieldsToUpdate": {
                  "items": {
                     "enum": [
                        "completedAt",
                        "createdAt",
                        "externalId",
                        "id",
                        "jobAgentConfig",
                        "jobAgentId",
                        "metadata",
                        "releaseId",
                        "startedAt",
                        "status",
                        "updatedAt"
                     ],
                     "type": "string"
                  },
                  "type": "array"
               },
               "id": {
                  "type": "string"
               },
               "job": {
                  "$ref": "#/components/schemas/Job"
               }
            },
            "required": [
               "job"
            ],
            "type": "object"
         },
         "JobWithRelease": {
            "properties": {
               "deployment": {
                  "$ref": "#/components/schemas/Deployment"
               },
               "environment": {
                  "$ref": "#/components/schemas/Environment"
               },
               "job": {
                  "$ref": "#/components/schemas/Job"
               },
               "release": {
                  "$ref": "#/components/schemas/Release"
               },
               "resource": {
                  "$ref": "#/components/schemas/Resource"
               }
            },
            "required": [
               "job",
               "release"
            ],
            "type": "object"
         },
         "JsonSelector": {
            "properties": {
               "json": {
                  "additionalProperties": true,
                  "type": "object"
               }
            },
            "required": [
               "json"
            ],
            "type": "object"
         },
         "LiteralValue": {
            "oneOf": [
               {
                  "$ref": "#/components/schemas/BooleanValue"
               },
               {
                  "$ref": "#/components/schemas/NumberValue"
               },
               {
                  "$ref": "#/components/schemas/IntegerValue"
               },
               {
                  "$ref": "#/components/schemas/StringValue"
               },
               {
                  "$ref": "#/components/schemas/ObjectValue"
               },
               {
                  "$ref": "#/components/schemas/NullValue"
               }
            ]
         },
         "NullValue": {
            "enum": [
               true
            ],
            "type": "boolean"
         },
         "NumberValue": {
            "type": "number"
         },
         "ObjectValue": {
            "properties": {
               "object": {
                  "additionalProperties": true,
                  "type": "object"
               }
            },
            "required": [
               "object"
            ],
            "type": "object"
         },
         "Policy": {
            "properties": {
               "createdAt": {
                  "type": "string"
               },
               "description": {
                  "type": "string"
               },
               "enabled": {
                  "type": "boolean"
               },
               "id": {
                  "type": "string"
               },
               "metadata": {
                  "additionalProperties": {
                     "type": "string"
                  },
                  "description": "Arbitrary metadata for the policy (record<string, string>)",
                  "type": "object"
               },
               "name": {
                  "type": "string"
               },
               "priority": {
                  "type": "integer"
               },
               "rules": {
                  "items": {
                     "$ref": "#/components/schemas/PolicyRule"
                  },
                  "type": "array"
               },
               "selectors": {
                  "items": {
                     "$ref": "#/components/schemas/PolicyTargetSelector"
                  },
                  "type": "array"
               },
               "workspaceId": {
                  "type": "string"
               }
            },
            "required": [
               "id",
               "name",
               "createdAt",
               "workspaceId",
               "selectors",
               "rules",
               "metadata",
               "priority",
               "enabled"
            ],
            "type": "object"
         },
         "PolicyRule": {
            "properties": {
               "anyApproval": {
                  "$ref": "#/components/schemas/AnyApprovalRule"
               },
               "createdAt": {
                  "type": "string"
               },
               "environmentProgression": {
                  "$ref": "#/components/schemas/EnvironmentProgressionRule"
               },
               "gradualRollout": {
                  "$ref": "#/components/schemas/GradualRolloutRule"
               },
               "id": {
                  "type": "string"
               },
               "policyId": {
                  "type": "string"
               }
            },
            "required": [
               "id",
               "policyId",
               "createdAt"
            ],
            "type": "object"
         },
         "PolicyTargetSelector": {
            "properties": {
               "deploymentSelector": {
                  "$ref": "#/components/schemas/Selector"
               },
               "environmentSelector": {
                  "$ref": "#/components/schemas/Selector"
               },
               "id": {
                  "type": "string"
               },
               "resourceSelector": {
                  "$ref": "#/components/schemas/Selector"
               }
            },
            "required": [
               "id"
            ],
            "type": "object"
         },
         "PropertyMatcher": {
            "properties": {
               "fromProperty": {
                  "items": {
                     "type": "string"
                  },
                  "type": "array"
               },
               "operator": {
                  "enum": [
                     "equals",
                     "notEquals",
                     "contains",
                     "startsWith",
                     "endsWith",
                     "regex"
                  ],
                  "type": "string"
               },
               "toProperty": {
                  "items": {
                     "type": "string"
                  },
                  "type": "array"
               }
            },
            "required": [
               "fromProperty",
               "toProperty",
               "operator"
            ],
            "type": "object"
         },
         "ReferenceValue": {
            "properties": {
               "path": {
                  "items": {
                     "type": "string"
                  },
                  "type": "array"
               },
               "reference": {
                  "type": "string"
               }
            },
            "required": [
               "reference",
               "path"
            ],
            "type": "object"
         },
         "RelatableEntityType": {
            "enum": [
               "deployment",
               "environment",
               "resource"
            ],
            "type": "string"
         },
         "RelationshipRule": {
            "properties": {
               "description": {
                  "type": "string"
               },
               "fromSelector": {
                  "$ref": "#/components/schemas/Selector"
               },
               "fromType": {
                  "$ref": "#/components/schemas/RelatableEntityType"
               },
               "id": {
                  "type": "string"
               },
               "matcher": {
                  "oneOf": [
                     {
                        "$ref": "#/components/schemas/CelMatcher"
                     }
                  ]
               },
               "metadata": {
                  "additionalProperties": {
                     "type": "string"
                  },
                  "type": "object"
               },
               "name": {
                  "type": "string"
               },
               "reference": {
                  "type": "string"
               },
               "relationshipType": {
                  "type": "string"
               },
               "toSelector": {
                  "$ref": "#/components/schemas/Selector"
               },
               "toType": {
                  "$ref": "#/components/schemas/RelatableEntityType"
               },
               "workspaceId": {
                  "type": "string"
               }
            },
            "required": [
               "id",
               "name",
               "reference",
               "fromType",
               "toType",
               "matcher",
               "relationshipType",
               "metadata",
               "workspaceId"
            ],
            "type": "object"
         },
         "Release": {
            "properties": {
               "createdAt": {
                  "type": "string"
               },
               "encryptedVariables": {
                  "items": {
                     "type": "string"
                  },
                  "type": "array"
               },
               "releaseTarget": {
                  "$ref": "#/components/schemas/ReleaseTarget"
               },
               "variables": {
                  "additionalProperties": {
                     "$ref": "#/components/schemas/LiteralValue"
                  },
                  "type": "object"
               },
               "version": {
                  "$ref": "#/components/schemas/DeploymentVersion"
               }
            },
            "required": [
               "version",
               "variables",
               "encryptedVariables",
               "releaseTarget",
               "createdAt"
            ],
            "type": "object"
         },
         "ReleaseTarget": {
            "properties": {
               "deploymentId": {
                  "type": "string"
               },
               "environmentId": {
                  "type": "string"
               },
               "resourceId": {
                  "type": "string"
               }
            },
            "required": [
               "resourceId",
               "environmentId",
               "deploymentId"
            ],
            "type": "object"
         },
         "Resource": {
            "properties": {
               "config": {
                  "additionalProperties": true,
                  "type": "object"
               },
               "createdAt": {
                  "format": "date-time",
                  "type": "string"
               },
               "deletedAt": {
                  "format": "date-time",
                  "type": "string"
               },
               "identifier": {
                  "type": "string"
               },
               "kind": {
                  "type": "string"
               },
               "lockedAt": {
                  "format": "date-time",
                  "type": "string"
               },
               "metadata": {
                  "additionalProperties": {
                     "type": "string"
                  },
                  "type": "object"
               },
               "name": {
                  "type": "string"
               },
               "providerId": {
                  "type": "string"
               },
               "updatedAt": {
                  "format": "date-time",
                  "type": "string"
               },
               "version": {
                  "type": "string"
               },
               "workspaceId": {
                  "type": "string"
               }
            },
            "required": [
               "name",
               "version",
               "kind",
               "identifier",
               "createdAt",
               "workspaceId",
               "config",
               "metadata"
            ],
            "type": "object"
         },
         "ResourceProvider": {
            "properties": {
               "createdAt": {
                  "format": "date-time",
                  "type": "string"
               },
               "id": {
                  "type": "string"
               },
               "metadata": {
                  "additionalProperties": {
                     "type": "string"
                  },
                  "description": "Arbitrary metadata for the resource provider (record<string, string>)",
                  "type": "object"
               },
               "name": {
                  "type": "string"
               },
               "workspaceId": {
                  "format": "uuid",
                  "type": "string"
               }
            },
            "required": [
               "id",
               "workspaceId",
               "name",
               "createdAt"
            ],
            "type": "object"
         },
         "ResourceProviderResource": {
            "properties": {
               "config": {
                  "additionalProperties": true,
                  "type": "object"
               },
               "createdAt": {
                  "format": "date-time",
                  "type": "string"
               },
               "deletedAt": {
                  "format": "date-time",
                  "type": "string"
               },
               "identifier": {
                  "type": "string"
               },
               "kind": {
                  "type": "string"
               },
               "lockedAt": {
                  "format": "date-time",
                  "type": "string"
               },
               "metadata": {
                  "additionalProperties": {
                     "type": "string"
                  },
                  "type": "object"
               },
               "name": {
                  "type": "string"
               },
               "updatedAt": {
                  "format": "date-time",
                  "type": "string"
               },
               "version": {
                  "type": "string"
               }
            },
            "required": [
               "name",
               "version",
               "kind",
               "identifier",
               "createdAt",
               "config",
               "metadata"
            ],
            "type": "object"
         },
         "Selector": {
            "oneOf": [
               {
                  "$ref": "#/components/schemas/JsonSelector"
               },
               {
                  "$ref": "#/components/schemas/CelSelector"
               }
            ]
         },
         "SensitiveValue": {
            "properties": {
               "valueHash": {
                  "type": "string"
               }
            },
            "required": [
               "valueHash"
            ],
            "type": "object"
         },
         "StringValue": {
            "type": "string"
         },
         "System": {
            "properties": {
               "description": {
                  "type": "string"
               },
               "id": {
                  "type": "string"
               },
               "name": {
                  "type": "string"
               },
               "slug": {
                  "type": "string"
               },
               "workspaceId": {
                  "type": "string"
               }
            },
            "required": [
               "id",
               "workspaceId",
               "name",
               "slug"
            ],
            "type": "object"
         },
         "UpdateWorkspaceRequest": {
            "properties": {
               "name": {
                  "description": "Display name of the workspace",
                  "maxLength": 30,
                  "minLength": 3,
                  "type": "string"
               },
               "slug": {
                  "description": "URL-friendly unique identifier (lowercase, no spaces)",
                  "maxLength": 50,
                  "minLength": 3,
                  "pattern": "^[a-z0-9-]+$",
                  "type": "string"
               }
            },
            "type": "object"
         },
         "UpsertDeploymentRequest": {
            "properties": {
               "description": {
                  "type": "string"
               },
               "jobAgentConfig": {
                  "additionalProperties": true,
                  "type": "object"
               },
               "jobAgentId": {
                  "type": "string"
               },
               "name": {
                  "type": "string"
               },
               "resourceSelector": {
                  "$ref": "#/components/schemas/Selector"
               },
               "slug": {
                  "type": "string"
               },
               "systemId": {
                  "type": "string"
               }
            },
            "required": [
               "systemId",
               "slug",
               "name"
            ],
            "type": "object"
         },
         "UpsertDeploymentVersionRequest": {
            "properties": {
               "config": {
                  "additionalProperties": true,
                  "type": "object"
               },
               "createdAt": {
                  "format": "date-time",
                  "type": "string"
               },
               "deploymentId": {
                  "type": "string"
               },
               "jobAgentConfig": {
                  "additionalProperties": true,
                  "type": "object"
               },
               "metadata": {
                  "additionalProperties": {
                     "type": "string"
                  },
                  "type": "object"
               },
               "name": {
                  "type": "string"
               },
               "status": {
                  "$ref": "#/components/schemas/DeploymentVersionStatus"
               },
               "tag": {
                  "type": "string"
               }
            },
            "required": [
               "tag",
               "deploymentId"
            ],
            "type": "object"
         },
         "UpsertEnvironmentRequest": {
            "properties": {
               "description": {
                  "type": "string"
               },
               "name": {
                  "type": "string"
               },
               "resourceSelector": {
                  "$ref": "#/components/schemas/Selector"
               },
               "systemId": {
                  "type": "string"
               }
            },
            "required": [
               "systemId",
               "name"
            ],
            "type": "object"
         },
         "UpsertPolicyRequest": {
            "properties": {
               "description": {
                  "type": "string"
               },
               "enabled": {
                  "type": "boolean"
               },
               "metadata": {
                  "additionalProperties": {
                     "type": "string"
                  },
                  "description": "Arbitrary metadata for the policy (record<string, string>)",
                  "type": "object"
               },
               "name": {
                  "type": "string"
               },
               "priority": {
                  "type": "integer"
               },
               "rules": {
                  "items": {
                     "$ref": "#/components/schemas/PolicyRule"
                  },
                  "type": "array"
               },
               "selectors": {
                  "items": {
                     "$ref": "#/components/schemas/PolicyTargetSelector"
                  },
                  "type": "array"
               }
            },
            "required": [
               "name"
            ],
            "type": "object"
         },
         "UpsertRelationshipRuleRequest": {
            "properties": {
               "description": {
                  "type": "string"
               },
               "fromSelector": {
                  "$ref": "#/components/schemas/Selector"
               },
               "fromType": {
                  "$ref": "#/components/schemas/RelatableEntityType"
               },
               "matcher": {
                  "oneOf": [
                     {
                        "$ref": "#/components/schemas/CelMatcher"
                     }
                  ]
               },
               "metadata": {
                  "additionalProperties": {
                     "type": "string"
                  },
                  "type": "object"
               },
               "name": {
                  "type": "string"
               },
               "reference": {
                  "type": "string"
               },
               "relationshipType": {
                  "type": "string"
               },
               "toSelector": {
                  "$ref": "#/components/schemas/Selector"
               },
               "toType": {
                  "$ref": "#/components/schemas/RelatableEntityType"
               }
            },
            "required": [
               "name",
               "reference",
               "fromType",
               "toType",
               "matcher",
               "relationshipType",
               "metadata"
            ],
            "type": "object"
         },
         "UpsertResourceProviderRequest": {
            "properties": {
               "id": {
                  "type": "string"
               },
               "metadata": {
                  "additionalProperties": {
                     "type": "string"
                  },
                  "description": "Arbitrary metadata for the resource provider (record<string, string>)",
                  "type": "object"
               },
               "name": {
                  "type": "string"
               }
            },
            "required": [
               "id",
               "name"
            ],
            "type": "object"
         },
         "UpsertSystemRequest": {
            "properties": {
               "description": {
                  "type": "string"
               },
               "name": {
                  "type": "string"
               }
            },
            "required": [
               "name"
            ],
            "type": "object"
         },
         "UpsertUserApprovalRecordRequest": {
            "properties": {
               "environmentIds": {
                  "items": {
                     "type": "string"
                  },
                  "type": "array"
               },
               "reason": {
                  "type": "string"
               },
               "status": {
                  "$ref": "#/components/schemas/ApprovalStatus"
               }
            },
            "required": [
               "status"
            ],
            "type": "object"
         },
         "UserApprovalRecord": {
            "properties": {
               "createdAt": {
                  "format": "date-time",
                  "type": "string"
               },
               "environmentId": {
                  "type": "string"
               },
               "reason": {
                  "type": "string"
               },
               "status": {
                  "$ref": "#/components/schemas/ApprovalStatus"
               },
               "userId": {
                  "type": "string"
               },
               "versionId": {
                  "type": "string"
               }
            },
            "required": [
               "userId",
               "versionId",
               "environmentId",
               "status",
               "createdAt"
            ],
            "type": "object"
         },
         "Value": {
            "oneOf": [
               {
                  "$ref": "#/components/schemas/LiteralValue"
               },
               {
                  "$ref": "#/components/schemas/ReferenceValue"
               },
               {
                  "$ref": "#/components/schemas/SensitiveValue"
               }
            ]
         },
         "Workspace": {
            "properties": {
               "awsRoleArn": {
                  "description": "AWS IAM role ARN for integrations",
                  "nullable": true,
                  "type": "string"
               },
               "createdAt": {
                  "description": "Timestamp when workspace was created",
                  "format": "date-time",
                  "type": "string"
               },
               "googleServiceAccountEmail": {
                  "description": "Google service account email for integrations",
                  "format": "email",
                  "nullable": true,
                  "type": "string"
               },
               "id": {
                  "description": "Unique identifier for the workspace",
                  "format": "uuid",
                  "type": "string"
               },
               "name": {
                  "description": "Display name of the workspace",
                  "maxLength": 30,
                  "minLength": 3,
                  "type": "string"
               },
               "slug": {
                  "description": "URL-friendly unique identifier",
                  "maxLength": 50,
                  "minLength": 3,
                  "pattern": "^[a-z0-9-]+$",
                  "type": "string"
               }
            },
            "required": [
               "id",
               "name",
               "slug",
               "createdAt"
            ],
            "type": "object"
         },
         "WorkspaceList": {
            "properties": {
               "total": {
                  "description": "Total number of workspaces",
                  "type": "integer"
               },
               "workspaces": {
                  "items": {
                     "$ref": "#/components/schemas/Workspace"
                  },
                  "type": "array"
               }
            },
            "required": [
               "workspaces",
               "total"
            ],
            "type": "object"
         }
      },
      "securitySchemes": {
         "ApiKeyAuth": {
            "description": "API key authentication using X-API-Key header",
            "in": "header",
            "name": "X-API-Key",
            "type": "apiKey"
         },
         "BearerAuth": {
            "bearerFormat": "JWT",
            "description": "Session-based authentication using Better Auth",
            "scheme": "bearer",
            "type": "http"
         }
      }
   },
   "info": {
      "description": "OpenAPI schemas for Ctrlplane API",
      "title": "Ctrlplane API",
      "version": "1.0.0"
   },
   "openapi": "3.0.0",
   "paths": {
      "/v1/workspaces": {
         "get": {
            "description": "Get all workspaces accessible to the authenticated user",
            "operationId": "listWorkspaces",
            "responses": {
               "200": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/WorkspaceList"
                        }
                     }
                  },
                  "description": "List of workspaces"
               },
               "401": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Error"
                        }
                     }
                  },
                  "description": "Unauthorized"
               },
               "500": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Error"
                        }
                     }
                  },
                  "description": "Internal server error"
               }
            },
            "summary": "List workspaces",
            "tags": [
               "Workspaces"
            ]
         },
         "post": {
            "description": "Create a new workspace and assign creator as owner",
            "operationId": "createWorkspace",
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/CreateWorkspaceRequest"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "201": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Workspace"
                        }
                     }
                  },
                  "description": "Workspace created successfully"
               },
               "400": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Error"
                        }
                     }
                  },
                  "description": "Invalid request"
               },
               "401": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Error"
                        }
                     }
                  },
                  "description": "Unauthorized"
               },
               "409": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Error"
                        }
                     }
                  },
                  "description": "Workspace slug already exists"
               },
               "500": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Error"
                        }
                     }
                  },
                  "description": "Internal server error"
               }
            },
            "summary": "Create workspace",
            "tags": [
               "Workspaces"
            ]
         }
      },
      "/v1/workspaces/slug/{workspaceSlug}": {
         "get": {
            "description": "Get a specific workspace by its slug",
            "operationId": "getWorkspaceBySlug",
            "responses": {
               "200": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Workspace"
                        }
                     }
                  },
                  "description": "Workspace details"
               },
               "401": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Error"
                        }
                     }
                  },
                  "description": "Unauthorized"
               },
               "404": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Error"
                        }
                     }
                  },
                  "description": "Workspace not found"
               },
               "500": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Error"
                        }
                     }
                  },
                  "description": "Internal server error"
               }
            },
            "summary": "Get workspace by slug",
            "tags": [
               "Workspaces"
            ]
         },
         "parameters": [
            {
               "description": "Workspace slug",
               "in": "path",
               "name": "workspaceSlug",
               "required": true,
               "schema": {
                  "type": "string"
               }
            }
         ]
      },
      "/v1/workspaces/{workspaceId}": {
         "delete": {
            "description": "Delete a workspace and all associated data",
            "operationId": "deleteWorkspace",
            "responses": {
               "204": {
                  "description": "Workspace deleted successfully"
               },
               "401": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Error"
                        }
                     }
                  },
                  "description": "Unauthorized"
               },
               "404": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Error"
                        }
                     }
                  },
                  "description": "Workspace not found"
               },
               "500": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Error"
                        }
                     }
                  },
                  "description": "Internal server error"
               }
            },
            "summary": "Delete workspace",
            "tags": [
               "Workspaces"
            ]
         },
         "get": {
            "description": "Get a specific workspace by ID",
            "operationId": "getWorkspace",
            "responses": {
               "200": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Workspace"
                        }
                     }
                  },
                  "description": "Workspace details"
               },
               "401": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Error"
                        }
                     }
                  },
                  "description": "Unauthorized"
               },
               "404": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Error"
                        }
                     }
                  },
                  "description": "Workspace not found"
               },
               "500": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Error"
                        }
                     }
                  },
                  "description": "Internal server error"
               }
            },
            "summary": "Get workspace",
            "tags": [
               "Workspaces"
            ]
         },
         "parameters": [
            {
               "description": "Workspace ID",
               "in": "path",
               "name": "workspaceId",
               "required": true,
               "schema": {
                  "format": "uuid",
                  "type": "string"
               }
            }
         ],
         "patch": {
            "description": "Update workspace properties",
            "operationId": "updateWorkspace",
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/UpdateWorkspaceRequest"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Workspace"
                        }
                     }
                  },
                  "description": "Workspace updated successfully"
               },
               "400": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Error"
                        }
                     }
                  },
                  "description": "Invalid request"
               },
               "401": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Error"
                        }
                     }
                  },
                  "description": "Unauthorized"
               },
               "404": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Error"
                        }
                     }
                  },
                  "description": "Workspace not found"
               },
               "409": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Error"
                        }
                     }
                  },
                  "description": "Workspace slug already exists"
               },
               "500": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Error"
                        }
                     }
                  },
                  "description": "Internal server error"
               }
            },
            "summary": "Update workspace",
            "tags": [
               "Workspaces"
            ]
         }
      },
      "/v1/workspaces/{workspaceId}/deployment-versions/{deploymentVersionId}/user-approval-records": {
         "post": {
            "operationId": "createUserApprovalRecord",
            "parameters": [
               {
                  "description": "ID of the workspace",
                  "in": "path",
                  "name": "workspaceId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "description": "ID of the deployment version",
                  "in": "path",
                  "name": "deploymentVersionId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/UpsertUserApprovalRecordRequest"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "properties": {
                              "success": {
                                 "type": "boolean"
                              }
                           },
                           "type": "object"
                        }
                     }
                  },
                  "description": "OK response"
               },
               "400": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ErrorResponse"
                        }
                     }
                  },
                  "description": "Invalid request"
               },
               "404": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ErrorResponse"
                        }
                     }
                  },
                  "description": "Resource not found"
               }
            },
            "summary": "Create user approval record"
         }
      },
      "/v1/workspaces/{workspaceId}/deployments": {
         "get": {
            "operationId": "listDeployments",
            "parameters": [
               {
                  "description": "ID of the workspace",
                  "in": "path",
                  "name": "workspaceId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "description": "Maximum number of items to return",
                  "in": "query",
                  "name": "limit",
                  "required": false,
                  "schema": {
                     "default": 50,
                     "maximum": 1000,
                     "minimum": 1,
                     "type": "integer"
                  }
               },
               {
                  "description": "Number of items to skip",
                  "in": "query",
                  "name": "offset",
                  "required": false,
                  "schema": {
                     "default": 0,
                     "minimum": 0,
                     "type": "integer"
                  }
               }
            ],
            "responses": {
               "200": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "properties": {
                              "items": {
                                 "items": {
                                    "$ref": "#/components/schemas/DeploymentAndSystem"
                                 },
                                 "type": "array"
                              },
                              "limit": {
                                 "description": "Maximum number of items returned",
                                 "type": "integer"
                              },
                              "offset": {
                                 "description": "Number of items skipped",
                                 "type": "integer"
                              },
                              "total": {
                                 "description": "Total number of items available",
                                 "type": "integer"
                              }
                           },
                           "required": [
                              "items",
                              "total",
                              "limit",
                              "offset"
                           ],
                           "type": "object"
                        }
                     }
                  },
                  "description": "Paginated list of items"
               }
            },
            "summary": "List deployments"
         },
         "post": {
            "operationId": "createDeployment",
            "parameters": [
               {
                  "description": "ID of the workspace",
                  "in": "path",
                  "name": "workspaceId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/CreateDeploymentRequest"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "202": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Deployment"
                        }
                     }
                  },
                  "description": "Accepted response"
               }
            },
            "summary": "Create deployment"
         }
      },
      "/v1/workspaces/{workspaceId}/deployments/{deploymentId}": {
         "delete": {
            "operationId": "deleteDeployment",
            "parameters": [
               {
                  "description": "ID of the workspace",
                  "in": "path",
                  "name": "workspaceId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "description": "ID of the deployment",
                  "in": "path",
                  "name": "deploymentId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "202": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Deployment"
                        }
                     }
                  },
                  "description": "Accepted response"
               }
            },
            "summary": "Delete deployment"
         },
         "get": {
            "operationId": "getDeployment",
            "parameters": [
               {
                  "description": "ID of the workspace",
                  "in": "path",
                  "name": "workspaceId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "description": "ID of the deployment",
                  "in": "path",
                  "name": "deploymentId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Deployment"
                        }
                     }
                  },
                  "description": "OK response"
               },
               "400": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ErrorResponse"
                        }
                     }
                  },
                  "description": "Invalid request"
               },
               "404": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ErrorResponse"
                        }
                     }
                  },
                  "description": "Resource not found"
               }
            },
            "summary": "Get deployment"
         },
         "put": {
            "operationId": "upsertDeployment",
            "parameters": [
               {
                  "description": "ID of the workspace",
                  "in": "path",
                  "name": "workspaceId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "description": "ID of the deployment",
                  "in": "path",
                  "name": "deploymentId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/UpsertDeploymentRequest"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "202": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Deployment"
                        }
                     }
                  },
                  "description": "Accepted response"
               }
            },
            "summary": "Upsert deployment"
         }
      },
      "/v1/workspaces/{workspaceId}/deployments/{deploymentId}/versions": {
         "get": {
            "operationId": "listDeploymentVersions",
            "parameters": [
               {
                  "description": "ID of the workspace",
                  "in": "path",
                  "name": "workspaceId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "description": "ID of the deployment",
                  "in": "path",
                  "name": "deploymentId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "description": "Maximum number of items to return",
                  "in": "query",
                  "name": "limit",
                  "required": false,
                  "schema": {
                     "default": 50,
                     "maximum": 1000,
                     "minimum": 1,
                     "type": "integer"
                  }
               },
               {
                  "description": "Number of items to skip",
                  "in": "query",
                  "name": "offset",
                  "required": false,
                  "schema": {
                     "default": 0,
                     "minimum": 0,
                     "type": "integer"
                  }
               }
            ],
            "responses": {
               "200": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "properties": {
                              "items": {
                                 "items": {
                                    "$ref": "#/components/schemas/DeploymentVersion"
                                 },
                                 "type": "array"
                              },
                              "limit": {
                                 "description": "Maximum number of items returned",
                                 "type": "integer"
                              },
                              "offset": {
                                 "description": "Number of items skipped",
                                 "type": "integer"
                              },
                              "total": {
                                 "description": "Total number of items available",
                                 "type": "integer"
                              }
                           },
                           "required": [
                              "items",
                              "total",
                              "limit",
                              "offset"
                           ],
                           "type": "object"
                        }
                     }
                  },
                  "description": "Paginated list of items"
               },
               "400": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ErrorResponse"
                        }
                     }
                  },
                  "description": "Invalid request"
               },
               "404": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ErrorResponse"
                        }
                     }
                  },
                  "description": "Resource not found"
               }
            },
            "summary": "List deployment versions"
         },
         "post": {
            "operationId": "createDeploymentVersion",
            "parameters": [
               {
                  "description": "ID of the workspace",
                  "in": "path",
                  "name": "workspaceId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "description": "ID of the deployment",
                  "in": "path",
                  "name": "deploymentId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/CreateDeploymentVersionRequest"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "202": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/DeploymentVersion"
                        }
                     }
                  },
                  "description": "Accepted response"
               },
               "400": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ErrorResponse"
                        }
                     }
                  },
                  "description": "Invalid request"
               }
            },
            "summary": "Create a deployment version"
         }
      },
      "/v1/workspaces/{workspaceId}/environments": {
         "get": {
            "operationId": "listEnvironments",
            "parameters": [
               {
                  "description": "ID of the workspace",
                  "in": "path",
                  "name": "workspaceId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "description": "Maximum number of items to return",
                  "in": "query",
                  "name": "limit",
                  "required": false,
                  "schema": {
                     "default": 50,
                     "maximum": 1000,
                     "minimum": 1,
                     "type": "integer"
                  }
               },
               {
                  "description": "Number of items to skip",
                  "in": "query",
                  "name": "offset",
                  "required": false,
                  "schema": {
                     "default": 0,
                     "minimum": 0,
                     "type": "integer"
                  }
               }
            ],
            "responses": {
               "200": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "properties": {
                              "items": {
                                 "items": {
                                    "$ref": "#/components/schemas/EnvironmentAndSystem"
                                 },
                                 "type": "array"
                              },
                              "limit": {
                                 "description": "Maximum number of items returned",
                                 "type": "integer"
                              },
                              "offset": {
                                 "description": "Number of items skipped",
                                 "type": "integer"
                              },
                              "total": {
                                 "description": "Total number of items available",
                                 "type": "integer"
                              }
                           },
                           "required": [
                              "items",
                              "total",
                              "limit",
                              "offset"
                           ],
                           "type": "object"
                        }
                     }
                  },
                  "description": "Paginated list of items"
               }
            },
            "summary": "List environments"
         },
         "post": {
            "operationId": "createEnvironment",
            "parameters": [
               {
                  "description": "ID of the workspace",
                  "in": "path",
                  "name": "workspaceId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/CreateEnvironmentRequest"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "202": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Environment"
                        }
                     }
                  },
                  "description": "Accepted response"
               }
            },
            "summary": "Create environment"
         }
      },
      "/v1/workspaces/{workspaceId}/environments/{environmentId}": {
         "delete": {
            "operationId": "deleteEnvironment",
            "parameters": [
               {
                  "description": "ID of the workspace",
                  "in": "path",
                  "name": "workspaceId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "description": "ID of the environment",
                  "in": "path",
                  "name": "environmentId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "202": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Environment"
                        }
                     }
                  },
                  "description": "Accepted response"
               }
            },
            "summary": "Delete environment"
         },
         "get": {
            "operationId": "getEnvironment",
            "parameters": [
               {
                  "description": "ID of the workspace",
                  "in": "path",
                  "name": "workspaceId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "description": "ID of the environment",
                  "in": "path",
                  "name": "environmentId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Environment"
                        }
                     }
                  },
                  "description": "OK response"
               },
               "400": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ErrorResponse"
                        }
                     }
                  },
                  "description": "Invalid request"
               },
               "404": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ErrorResponse"
                        }
                     }
                  },
                  "description": "Resource not found"
               }
            },
            "summary": "Get environment"
         },
         "put": {
            "operationId": "upsertEnvironmentById",
            "parameters": [
               {
                  "description": "ID of the workspace",
                  "in": "path",
                  "name": "workspaceId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "description": "ID of the environment",
                  "in": "path",
                  "name": "environmentId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/UpsertEnvironmentRequest"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Environment"
                        }
                     }
                  },
                  "description": "OK response"
               },
               "400": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ErrorResponse"
                        }
                     }
                  },
                  "description": "Invalid request"
               },
               "404": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ErrorResponse"
                        }
                     }
                  },
                  "description": "Resource not found"
               }
            },
            "summary": "Upsert environment"
         }
      },
      "/v1/workspaces/{workspaceId}/jobs": {
         "get": {
            "description": "Returns a list of jobs.",
            "operationId": "getJobs",
            "parameters": [
               {
                  "description": "ID of the workspace",
                  "in": "path",
                  "name": "workspaceId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "description": "Maximum number of items to return",
                  "in": "query",
                  "name": "limit",
                  "required": false,
                  "schema": {
                     "default": 50,
                     "maximum": 1000,
                     "minimum": 1,
                     "type": "integer"
                  }
               },
               {
                  "description": "Number of items to skip",
                  "in": "query",
                  "name": "offset",
                  "required": false,
                  "schema": {
                     "default": 0,
                     "minimum": 0,
                     "type": "integer"
                  }
               }
            ],
            "responses": {
               "200": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "properties": {
                              "items": {
                                 "items": {
                                    "$ref": "#/components/schemas/JobWithRelease"
                                 },
                                 "type": "array"
                              },
                              "limit": {
                                 "description": "Maximum number of items returned",
                                 "type": "integer"
                              },
                              "offset": {
                                 "description": "Number of items skipped",
                                 "type": "integer"
                              },
                              "total": {
                                 "description": "Total number of items available",
                                 "type": "integer"
                              }
                           },
                           "required": [
                              "items",
                              "total",
                              "limit",
                              "offset"
                           ],
                           "type": "object"
                        }
                     }
                  },
                  "description": "Paginated list of items"
               },
               "400": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ErrorResponse"
                        }
                     }
                  },
                  "description": "Invalid request"
               },
               "404": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ErrorResponse"
                        }
                     }
                  },
                  "description": "Resource not found"
               }
            },
            "summary": "List jobs"
         }
      },
      "/v1/workspaces/{workspaceId}/jobs/{jobId}": {
         "get": {
            "description": "Returns a specific job by ID.",
            "operationId": "getJob",
            "parameters": [
               {
                  "description": "ID of the workspace",
                  "in": "path",
                  "name": "workspaceId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "description": "ID of the job",
                  "in": "path",
                  "name": "jobId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Job"
                        }
                     }
                  },
                  "description": "Get job"
               },
               "400": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ErrorResponse"
                        }
                     }
                  },
                  "description": "Invalid request"
               },
               "404": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ErrorResponse"
                        }
                     }
                  },
                  "description": "Resource not found"
               }
            },
            "summary": "Get job"
         }
      },
      "/v1/workspaces/{workspaceId}/jobs/{jobId}/with-release": {
         "get": {
            "description": "Returns a specific job by ID with its release.",
            "operationId": "getJobWithRelease",
            "parameters": [
               {
                  "description": "ID of the workspace",
                  "in": "path",
                  "name": "workspaceId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "description": "ID of the job",
                  "in": "path",
                  "name": "jobId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/JobWithRelease"
                        }
                     }
                  },
                  "description": "Get job with release"
               },
               "400": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ErrorResponse"
                        }
                     }
                  },
                  "description": "Invalid request"
               },
               "404": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ErrorResponse"
                        }
                     }
                  },
                  "description": "Resource not found"
               }
            },
            "summary": "Get job with release"
         }
      },
      "/v1/workspaces/{workspaceId}/policies": {
         "get": {
            "operationId": "listPolicies",
            "parameters": [
               {
                  "description": "ID of the workspace",
                  "in": "path",
                  "name": "workspaceId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "properties": {
                              "policies": {
                                 "items": {
                                    "$ref": "#/components/schemas/Policy"
                                 },
                                 "type": "array"
                              }
                           },
                           "type": "object"
                        }
                     }
                  },
                  "description": "A list of policies"
               },
               "404": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ErrorResponse"
                        }
                     }
                  },
                  "description": "Resource not found"
               }
            },
            "summary": "List policies"
         },
         "post": {
            "operationId": "createPolicy",
            "parameters": [
               {
                  "description": "ID of the workspace",
                  "in": "path",
                  "name": "workspaceId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/CreatePolicyRequest"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "202": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Policy"
                        }
                     }
                  },
                  "description": "Accepted response"
               },
               "400": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ErrorResponse"
                        }
                     }
                  },
                  "description": "Invalid request"
               }
            },
            "summary": "Create a policy"
         }
      },
      "/v1/workspaces/{workspaceId}/policies/{policyId}": {
         "delete": {
            "operationId": "deletePolicy",
            "parameters": [
               {
                  "description": "ID of the workspace",
                  "in": "path",
                  "name": "workspaceId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "description": "ID of the policy",
                  "in": "path",
                  "name": "policyId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "202": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Policy"
                        }
                     }
                  },
                  "description": "Policy updated"
               },
               "400": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ErrorResponse"
                        }
                     }
                  },
                  "description": "Invalid request"
               },
               "404": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ErrorResponse"
                        }
                     }
                  },
                  "description": "Resource not found"
               }
            },
            "summary": "Delete a policy by ID"
         },
         "get": {
            "operationId": "getPolicy",
            "parameters": [
               {
                  "description": "ID of the workspace",
                  "in": "path",
                  "name": "workspaceId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "description": "ID of the policy",
                  "in": "path",
                  "name": "policyId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Policy"
                        }
                     }
                  },
                  "description": "OK response"
               },
               "400": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ErrorResponse"
                        }
                     }
                  },
                  "description": "Invalid request"
               },
               "404": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ErrorResponse"
                        }
                     }
                  },
                  "description": "Resource not found"
               }
            },
            "summary": "Get a policy by ID"
         },
         "put": {
            "operationId": "updatePolicy",
            "parameters": [
               {
                  "description": "ID of the workspace",
                  "in": "path",
                  "name": "workspaceId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "description": "ID of the policy",
                  "in": "path",
                  "name": "policyId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/UpsertPolicyRequest"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "202": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Policy"
                        }
                     }
                  },
                  "description": "Accepted response"
               },
               "400": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ErrorResponse"
                        }
                     }
                  },
                  "description": "Invalid request"
               },
               "404": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ErrorResponse"
                        }
                     }
                  },
                  "description": "Resource not found"
               }
            },
            "summary": "Upsert a policy by ID"
         }
      },
      "/v1/workspaces/{workspaceId}/relationship-rules": {
         "post": {
            "operationId": "createRelationshipRule",
            "parameters": [
               {
                  "description": "ID of the workspace",
                  "in": "path",
                  "name": "workspaceId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/CreateRelationshipRuleRequest"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "201": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/RelationshipRule"
                        }
                     }
                  },
                  "description": "Resource created successfully"
               },
               "400": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ErrorResponse"
                        }
                     }
                  },
                  "description": "Invalid request"
               }
            },
            "summary": "Create relationship rule"
         }
      },
      "/v1/workspaces/{workspaceId}/relationship-rules/{relationshipRuleId}": {
         "delete": {
            "operationId": "deleteRelationship",
            "parameters": [
               {
                  "description": "ID of the workspace",
                  "in": "path",
                  "name": "workspaceId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "description": "ID of the relationship rule",
                  "in": "path",
                  "name": "relationshipRuleId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "202": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/RelationshipRule"
                        }
                     }
                  },
                  "description": "Accepted response"
               },
               "400": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ErrorResponse"
                        }
                     }
                  },
                  "description": "Invalid request"
               },
               "404": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ErrorResponse"
                        }
                     }
                  },
                  "description": "Resource not found"
               }
            },
            "summary": "Delete relationship"
         },
         "get": {
            "operationId": "getRelationshipRule",
            "parameters": [
               {
                  "description": "ID of the workspace",
                  "in": "path",
                  "name": "workspaceId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "description": "ID of the relationship rule",
                  "in": "path",
                  "name": "relationshipRuleId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/RelationshipRule"
                        }
                     }
                  },
                  "description": "OK response"
               },
               "400": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ErrorResponse"
                        }
                     }
                  },
                  "description": "Invalid request"
               },
               "404": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ErrorResponse"
                        }
                     }
                  },
                  "description": "Resource not found"
               }
            },
            "summary": "Get relationship"
         },
         "put": {
            "operationId": "upsertRelationshipById",
            "parameters": [
               {
                  "description": "ID of the workspace",
                  "in": "path",
                  "name": "workspaceId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "description": "ID of the relationship rule",
                  "in": "path",
                  "name": "relationshipRuleId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/UpsertRelationshipRuleRequest"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "202": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/RelationshipRule"
                        }
                     }
                  },
                  "description": "Accepted response"
               },
               "400": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ErrorResponse"
                        }
                     }
                  },
                  "description": "Invalid request"
               },
               "404": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ErrorResponse"
                        }
                     }
                  },
                  "description": "Resource not found"
               }
            },
            "summary": "Upsert relationship"
         }
      },
      "/v1/workspaces/{workspaceId}/resource-providers": {
         "put": {
            "operationId": "upsertResourceProvider",
            "parameters": [
               {
                  "description": "ID of the workspace",
                  "in": "path",
                  "name": "workspaceId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/UpsertResourceProviderRequest"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ResourceProvider"
                        }
                     }
                  },
                  "description": "OK response"
               }
            },
            "summary": "Upsert resource provider"
         }
      },
      "/v1/workspaces/{workspaceId}/resource-providers/name/{name}": {
         "get": {
            "operationId": "getResourceProviderByName",
            "parameters": [
               {
                  "description": "ID of the workspace",
                  "in": "path",
                  "name": "workspaceId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "description": "Name of the resource provider",
                  "in": "path",
                  "name": "name",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ResourceProvider"
                        }
                     }
                  },
                  "description": "OK response"
               }
            },
            "summary": "Get a resource provider by name"
         }
      },
      "/v1/workspaces/{workspaceId}/resource-providers/{providerId}/set": {
         "put": {
            "operationId": "setResourceProvidersResources",
            "parameters": [
               {
                  "description": "ID of the workspace",
                  "in": "path",
                  "name": "workspaceId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "description": "ID of the resource provider",
                  "in": "path",
                  "name": "providerId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "properties": {
                           "resources": {
                              "items": {
                                 "$ref": "#/components/schemas/ResourceProviderResource"
                              },
                              "type": "array"
                           }
                        },
                        "required": [
                           "resources"
                        ],
                        "type": "object"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "202": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "properties": { },
                           "type": "object"
                        }
                     }
                  },
                  "description": "Accepted response"
               }
            },
            "summary": "Set the resources for a provider"
         }
      },
      "/v1/workspaces/{workspaceId}/resources": {
         "get": {
            "description": "Returns a paginated list of resources for workspace {workspaceId}.",
            "operationId": "getAllResources",
            "parameters": [
               {
                  "description": "ID of the workspace",
                  "in": "path",
                  "name": "workspaceId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "description": "Maximum number of items to return",
                  "in": "query",
                  "name": "limit",
                  "required": false,
                  "schema": {
                     "default": 50,
                     "maximum": 1000,
                     "minimum": 1,
                     "type": "integer"
                  }
               },
               {
                  "description": "Number of items to skip",
                  "in": "query",
                  "name": "offset",
                  "required": false,
                  "schema": {
                     "default": 0,
                     "minimum": 0,
                     "type": "integer"
                  }
               },
               {
                  "description": "CEL expression to filter the results",
                  "in": "query",
                  "name": "cel",
                  "required": false,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "properties": {
                              "items": {
                                 "items": {
                                    "$ref": "#/components/schemas/Resource"
                                 },
                                 "type": "array"
                              },
                              "limit": {
                                 "description": "Maximum number of items returned",
                                 "type": "integer"
                              },
                              "offset": {
                                 "description": "Number of items skipped",
                                 "type": "integer"
                              },
                              "total": {
                                 "description": "Total number of items available",
                                 "type": "integer"
                              }
                           },
                           "required": [
                              "items",
                              "total",
                              "limit",
                              "offset"
                           ],
                           "type": "object"
                        }
                     }
                  },
                  "description": "Paginated list of items"
               }
            },
            "summary": "Get all resources",
            "tags": [
               "Resources"
            ]
         }
      },
      "/v1/workspaces/{workspaceId}/resources/identifier/{identifier}": {
         "get": {
            "description": "Returns a resource by its identifier.",
            "operationId": "getResourceByIdentifier",
            "parameters": [
               {
                  "description": "ID of the workspace",
                  "in": "path",
                  "name": "workspaceId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "description": "Identifier of the resource",
                  "in": "path",
                  "name": "identifier",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Resource"
                        }
                     }
                  },
                  "description": "OK response"
               }
            },
            "summary": "Get resource by identifier",
            "tags": [
               "Resources"
            ]
         }
      },
      "/v1/workspaces/{workspaceId}/systems": {
         "get": {
            "operationId": "listSystems",
            "parameters": [
               {
                  "description": "ID of the workspace",
                  "in": "path",
                  "name": "workspaceId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "description": "Maximum number of items to return",
                  "in": "query",
                  "name": "limit",
                  "required": false,
                  "schema": {
                     "default": 50,
                     "maximum": 1000,
                     "minimum": 1,
                     "type": "integer"
                  }
               },
               {
                  "description": "Number of items to skip",
                  "in": "query",
                  "name": "offset",
                  "required": false,
                  "schema": {
                     "default": 0,
                     "minimum": 0,
                     "type": "integer"
                  }
               }
            ],
            "responses": {
               "200": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "properties": {
                              "items": {
                                 "items": {
                                    "$ref": "#/components/schemas/System"
                                 },
                                 "type": "array"
                              },
                              "limit": {
                                 "description": "Maximum number of items returned",
                                 "type": "integer"
                              },
                              "offset": {
                                 "description": "Number of items skipped",
                                 "type": "integer"
                              },
                              "total": {
                                 "description": "Total number of items available",
                                 "type": "integer"
                              }
                           },
                           "required": [
                              "items",
                              "total",
                              "limit",
                              "offset"
                           ],
                           "type": "object"
                        }
                     }
                  },
                  "description": "Paginated list of items"
               }
            },
            "summary": "List systems"
         },
         "post": {
            "operationId": "createSystem",
            "parameters": [
               {
                  "description": "ID of the workspace",
                  "in": "path",
                  "name": "workspaceId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/CreateSystemRequest"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "202": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/System"
                        }
                     }
                  },
                  "description": "Accepted response"
               }
            },
            "summary": "Create system"
         }
      },
      "/v1/workspaces/{workspaceId}/systems/{systemId}": {
         "delete": {
            "operationId": "deleteSystem",
            "parameters": [
               {
                  "description": "ID of the workspace",
                  "in": "path",
                  "name": "workspaceId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "description": "ID of the system",
                  "in": "path",
                  "name": "systemId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "202": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/System"
                        }
                     }
                  },
                  "description": "Accepted response"
               },
               "400": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ErrorResponse"
                        }
                     }
                  },
                  "description": "Invalid request"
               },
               "404": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ErrorResponse"
                        }
                     }
                  },
                  "description": "Resource not found"
               }
            },
            "summary": "Delete system"
         },
         "get": {
            "operationId": "getSystem",
            "parameters": [
               {
                  "description": "ID of the workspace",
                  "in": "path",
                  "name": "workspaceId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "description": "ID of the system",
                  "in": "path",
                  "name": "systemId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/System"
                        }
                     }
                  },
                  "description": "OK response"
               },
               "400": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ErrorResponse"
                        }
                     }
                  },
                  "description": "Invalid request"
               },
               "404": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ErrorResponse"
                        }
                     }
                  },
                  "description": "Resource not found"
               }
            },
            "summary": "Get system"
         },
         "put": {
            "operationId": "upsertSystemById",
            "parameters": [
               {
                  "description": "ID of the workspace",
                  "in": "path",
                  "name": "workspaceId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "description": "ID of the system",
                  "in": "path",
                  "name": "systemId",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/UpsertSystemRequest"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/System"
                        }
                     }
                  },
                  "description": "OK response"
               }
            },
            "summary": "Upsert system"
         }
      }
   },
   "security": [
      {
         "ApiKeyAuth": [ ]
      },
      {
         "BearerAuth": [ ]
      }
   ],
   "servers": [
      {
         "description": "Development server",
         "url": "http://localhost:3001/api"
      }
   ]
}
