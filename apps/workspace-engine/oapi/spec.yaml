openapi: "3.0.0"
info:
  version: 1.0.0
  title: Workspace Engine API
  description: OpenAPI schemas for workspace engine protobuf messages
components:
  schemas:
    # Enums
    ApprovalStatus:
      type: string
      enum:
        - approved
        - rejected

    JobStatus:
      type: string
      enum:
        - cancelled
        - skipped
        - inProgress
        - actionRequired
        - pending
        - failure
        - invalidJobAgent
        - invalidIntegration
        - externalRunNotFound
        - successful

    DeploymentVersionStatus:
      type: string
      enum:
        - unspecified
        - building
        - ready
        - failed
        - rejected

    # Core message types
    Selector:
      oneOf:
        - type: object
          required:
            - json
          properties:
            json:
              type: object
              additionalProperties: true

    PropertyMatcher:
      type: object
      required:
        - fromProperty
        - toProperty
      properties:
        fromProperty:
          type: array
          items:
            type: string
        toProperty:
          type: array
          items:
            type: string
        operator:
          type: string

    Policy:
      type: object
      required:
        - id
        - name
        - createdAt
        - workspaceId
        - selectors
        - rules
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        createdAt:
          type: string
        workspaceId:
          type: string
        selectors:
          type: array
          items:
            $ref: "#/components/schemas/PolicyTargetSelector"
        rules:
          type: array
          items:
            $ref: "#/components/schemas/PolicyRule"

    PolicyTargetSelector:
      type: object
      required:
        - id
      properties:
        id:
          type: string
        deploymentSelector:
          $ref: "#/components/schemas/Selector"
        environmentSelector:
          $ref: "#/components/schemas/Selector"
        resourceSelector:
          $ref: "#/components/schemas/Selector"

    PolicyRule:
      type: object
      required:
        - id
        - policyId
        - createdAt
      properties:
        id:
          type: string
        policyId:
          type: string
        createdAt:
          type: string
        anyApproval:
          $ref: "#/components/schemas/AnyApprovalRule"

    UserApprovalRecord:
      type: object
      required:
        - userId
        - versionId
        - status
        - createdAt
      properties:
        userId:
          type: string
        versionId:
          type: string
        status:
          $ref: "#/components/schemas/ApprovalStatus"
        reason:
          type: string
        createdAt:
          type: string

    AnyApprovalRule:
      type: object
      required:
        - minApprovals
      properties:
        minApprovals:
          type: integer
          format: int32

    Resource:
      type: object
      required:
        - id
        - name
        - version
        - kind
        - identifier
        - createdAt
        - workspaceId
        - config
        - metadata
      properties:
        id:
          type: string
        name:
          type: string
        version:
          type: string
        kind:
          type: string
        identifier:
          type: string
        createdAt:
          type: string
        workspaceId:
          type: string
        providerId:
          type: string
        config:
          type: object
          additionalProperties: true
        lockedAt:
          type: string
        updatedAt:
          type: string
        deletedAt:
          type: string
        metadata:
          type: object
          additionalProperties:
            type: string

    ResourceVariable:
      type: object
      required:
        - resourceId
        - key
        - value
      properties:
        resourceId:
          type: string
        key:
          type: string
        value:
          $ref: "#/components/schemas/Value"

    Environment:
      type: object
      required:
        - id
        - name
        - systemId
        - resourceSelector
        - createdAt
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        systemId:
          type: string
        resourceSelector:
          $ref: "#/components/schemas/Selector"
        createdAt:
          type: string

    Deployment:
      type: object
      required:
        - id
        - name
        - slug
        - systemId
        - jobAgentConfig
      properties:
        id:
          type: string
        name:
          type: string
        slug:
          type: string
        description:
          type: string
        systemId:
          type: string
        jobAgentId:
          type: string
        jobAgentConfig:
          type: object
          additionalProperties: true
        resourceSelector:
          $ref: "#/components/schemas/Selector"

    JobAgent:
      type: object
      required:
        - id
        - workspaceId
        - name
        - type
        - config
      properties:
        id:
          type: string
        workspaceId:
          type: string
        name:
          type: string
        type:
          type: string
        config:
          type: object
          additionalProperties: true

    Job:
      type: object
      required:
        - id
        - releaseId
        - jobAgentId
        - jobAgentConfig
        - status
        - resourceId
        - environmentId
        - deploymentId
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
        releaseId:
          type: string
        jobAgentId:
          type: string
        jobAgentConfig:
          type: object
          additionalProperties: true
        externalId:
          type: string
        status:
          $ref: "#/components/schemas/JobStatus"
        resourceId:
          type: string
        environmentId:
          type: string
        deploymentId:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        startedAt:
          type: string
        completedAt:
          type: string

    ReleaseTarget:
      type: object
      required:
        - resourceId
        - environmentId
        - deploymentId
      properties:
        resourceId:
          type: string
        environmentId:
          type: string
        deploymentId:
          type: string

    LiteralValue:
      oneOf:
        - type: object
          required: [string]
          properties:
            string:
              type: string
        - type: object
          required: [bool]
          properties:
            bool:
              type: boolean
        - type: object
          required: [number]
          properties:
            number:
              type: number
        - type: object
          required: [int]
          properties:
            int:
              type: integer
        - type: object
          required: [object]
          properties:
            object:
              type: object
              additionalProperties: true
        - type: object
          required: ["null"]
          properties:
            "null":
              type: boolean
              enum: [true]
    SensitiveValue:
      type: object
      required:
        - valueHash
      properties:
        valueHash:
          type: string

    ReferenceValue:
      type: object
      required:
        - reference
        - path
      properties:
        reference:
          type: string
        path:
          type: array
          items:
            type: string

    Value:
      oneOf:
        - $ref: "#/components/schemas/LiteralValue"
        - $ref: "#/components/schemas/ReferenceValue"
        - $ref: "#/components/schemas/SensitiveValue"

    Release:
      type: object
      required:
        - version
        - variables
        - encryptedVariables
        - releaseTarget
        - createdAt
      properties:
        version:
          $ref: "#/components/schemas/DeploymentVersion"
        variables:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/LiteralValue"
        encryptedVariables:
          type: array
          items:
            type: string
        releaseTarget:
          $ref: "#/components/schemas/ReleaseTarget"
        createdAt:
          type: string

    DeploymentVariable:
      type: object
      required:
        - id
        - key
        - variableId
        - deploymentId
        - defaultValue
      properties:
        id:
          type: string
        key:
          type: string
        variableId:
          type: string
        description:
          type: string
        deploymentId:
          type: string
        defaultValue:
          $ref: "#/components/schemas/LiteralValue"

    DeploymentVariableValue:
      type: object
      required:
        - id
        - deploymentVariableId
        - priority
        - value
      properties:
        id:
          type: string
        deploymentVariableId:
          type: string
        priority:
          type: integer
          format: int64
        resourceSelector:
          $ref: "#/components/schemas/Selector"
        value:
          $ref: "#/components/schemas/Value"

    DeploymentVersion:
      type: object
      required:
        - id
        - name
        - tag
        - config
        - jobAgentConfig
        - deploymentId
        - status
        - createdAt
      properties:
        id:
          type: string
        name:
          type: string
        tag:
          type: string
        config:
          type: object
          additionalProperties: true
        jobAgentConfig:
          type: object
          additionalProperties: true
        deploymentId:
          type: string
        status:
          $ref: "#/components/schemas/DeploymentVersionStatus"
        message:
          type: string
        createdAt:
          type: string

    System:
      type: object
      required:
        - id
        - workspaceId
        - name
      properties:
        id:
          type: string
        workspaceId:
          type: string
        name:
          type: string
        description:
          type: string

    RelationshipRule:
      type: object
      required:
        - id
        - name
        - reference
        - fromType
        - fromSelector
        - toType
        - toSelector
        - propertyMatchers
        - relationshipType
        - metadata
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        reference:
          type: string
        fromType:
          type: string
        fromSelector:
          $ref: "#/components/schemas/Selector"
        toType:
          type: string
        toSelector:
          $ref: "#/components/schemas/Selector"
        propertyMatchers:
          type: array
          items:
            $ref: "#/components/schemas/PropertyMatcher"
        relationshipType:
          type: string
        metadata:
          type: object
          additionalProperties:
            type: string

    # Request/Response types
    ComputeReleaseTargetsRequest:
      type: object
      required:
        - environments
        - deployments
        - resources
      properties:
        environments:
          type: array
          items:
            $ref: "#/components/schemas/Environment"
        deployments:
          type: array
          items:
            $ref: "#/components/schemas/Deployment"
        resources:
          type: array
          items:
            $ref: "#/components/schemas/Resource"

    ComputeReleaseTargetsResponse:
      type: object
      required:
        - releaseTargets
      properties:
        releaseTargets:
          type: array
          items:
            $ref: "#/components/schemas/ReleaseTarget"

    ListReleaseTargetsRequest:
      type: object
      required:
        - workspaceId
      properties:
        workspaceId:
          type: string
        resourceSelector:
          $ref: "#/components/schemas/Selector"
        deploymentSelector:
          $ref: "#/components/schemas/Selector"
        environmentSelector:
          $ref: "#/components/schemas/Selector"

    ListReleaseTargetsResponse:
      type: object
      required:
        - releaseTargets
      properties:
        releaseTargets:
          type: array
          items:
            $ref: "#/components/schemas/ReleaseTarget"

    ListDeploymentsRequest:
      type: object
      required:
        - workspaceId
      properties:
        workspaceId:
          type: string
        deploymentSelector:
          $ref: "#/components/schemas/Selector"

    ListDeploymentsResponse:
      type: object
      required:
        - deployments
      properties:
        deployments:
          type: array
          items:
            $ref: "#/components/schemas/Deployment"
