name: Build and Push Web App

on:
  push:
    branches:
      - main
    paths:
      - "apps/web/**"
      - "packages/**"
      - ".github/workflows/apps-web.yaml"
  pull_request:
    paths:
      - "apps/web/**"
      - "packages/**"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/web

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        platform: [linux/amd64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ctrlplane/webservice
          tags: |
            type=sha,format=short,prefix=

      - name: Build
        uses: docker/build-push-action@v6
        if: github.ref != 'refs/heads/main'
        with:
          push: false
          file: apps/webservice/Dockerfile
          platforms: ${{ matrix.platform }}
          tags: ${{ steps.meta.outputs.tags }}

      - name: Summary
        run: |
          echo "### Docker Image Built Successfully! ðŸš€" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Image Tags:**" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: Build and Push
        uses: docker/build-push-action@v6
        if: github.ref == 'refs/heads/main' && env.DOCKERHUB_LOGIN == 'true'
        with:
          push: true
          file: apps/webservice/Dockerfile
          platforms: ${{ matrix.platform }}
          tags: ${{ steps.meta.outputs.tags }}
