/* tslint:disable */
/* eslint-disable */
/**
 * Ctrlplane API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { UpsertTargetProviderTargetsRequestTargetsInner } from "./UpsertTargetProviderTargetsRequestTargetsInner";
import { mapValues } from "../runtime";
import {
  UpsertTargetProviderTargetsRequestTargetsInnerFromJSON,
  UpsertTargetProviderTargetsRequestTargetsInnerFromJSONTyped,
  UpsertTargetProviderTargetsRequestTargetsInnerToJSON,
} from "./UpsertTargetProviderTargetsRequestTargetsInner";

/**
 *
 * @export
 * @interface UpsertTargetProviderTargetsRequest
 */
export interface UpsertTargetProviderTargetsRequest {
  /**
   *
   * @type {Array<UpsertTargetProviderTargetsRequestTargetsInner>}
   * @memberof UpsertTargetProviderTargetsRequest
   */
  targets?: Array<UpsertTargetProviderTargetsRequestTargetsInner>;
}

/**
 * Check if a given object implements the UpsertTargetProviderTargetsRequest interface.
 */
export function instanceOfUpsertTargetProviderTargetsRequest(
  value: object,
): value is UpsertTargetProviderTargetsRequest {
  return true;
}

export function UpsertTargetProviderTargetsRequestFromJSON(
  json: any,
): UpsertTargetProviderTargetsRequest {
  return UpsertTargetProviderTargetsRequestFromJSONTyped(json, false);
}

export function UpsertTargetProviderTargetsRequestFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): UpsertTargetProviderTargetsRequest {
  if (json == null) {
    return json;
  }
  return {
    targets:
      json["targets"] == null
        ? undefined
        : (json["targets"] as Array<any>).map(
            UpsertTargetProviderTargetsRequestTargetsInnerFromJSON,
          ),
  };
}

export function UpsertTargetProviderTargetsRequestToJSON(
  value?: UpsertTargetProviderTargetsRequest | null,
): any {
  if (value == null) {
    return value;
  }
  return {
    targets:
      value["targets"] == null
        ? undefined
        : (value["targets"] as Array<any>).map(
            UpsertTargetProviderTargetsRequestTargetsInnerToJSON,
          ),
  };
}
