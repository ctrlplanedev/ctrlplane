/* tslint:disable */
/* eslint-disable */
/**
 * Ctrlplane API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { UpsertTargetsRequestTargetsInner } from "./UpsertTargetsRequestTargetsInner";
import { mapValues } from "../runtime";
import {
  UpsertTargetsRequestTargetsInnerFromJSON,
  UpsertTargetsRequestTargetsInnerFromJSONTyped,
  UpsertTargetsRequestTargetsInnerToJSON,
  UpsertTargetsRequestTargetsInnerToJSONTyped,
} from "./UpsertTargetsRequestTargetsInner";

/**
 *
 * @export
 * @interface UpsertTargetsRequest
 */
export interface UpsertTargetsRequest {
  /**
   *
   * @type {string}
   * @memberof UpsertTargetsRequest
   */
  workspaceId: string;
  /**
   *
   * @type {Array<UpsertTargetsRequestTargetsInner>}
   * @memberof UpsertTargetsRequest
   */
  targets: Array<UpsertTargetsRequestTargetsInner>;
}

/**
 * Check if a given object implements the UpsertTargetsRequest interface.
 */
export function instanceOfUpsertTargetsRequest(
  value: object,
): value is UpsertTargetsRequest {
  if (!("workspaceId" in value) || value["workspaceId"] === undefined)
    return false;
  if (!("targets" in value) || value["targets"] === undefined) return false;
  return true;
}

export function UpsertTargetsRequestFromJSON(json: any): UpsertTargetsRequest {
  return UpsertTargetsRequestFromJSONTyped(json, false);
}

export function UpsertTargetsRequestFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): UpsertTargetsRequest {
  if (json == null) {
    return json;
  }
  return {
    workspaceId: json["workspaceId"],
    targets: (json["targets"] as Array<any>).map(
      UpsertTargetsRequestTargetsInnerFromJSON,
    ),
  };
}

export function UpsertTargetsRequestToJSON(json: any): UpsertTargetsRequest {
  return UpsertTargetsRequestToJSONTyped(json, false);
}

export function UpsertTargetsRequestToJSONTyped(
  value?: UpsertTargetsRequest | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    workspaceId: value["workspaceId"],
    targets: (value["targets"] as Array<any>).map(
      UpsertTargetsRequestTargetsInnerToJSON,
    ),
  };
}
